// Generated by ts-to-zod
import { z } from "zod";
import { entryActionSchema, stateSchema } from "./enums";

export const refSchema = z.union([
  z.string(),
  z.object({
    link: z.string(),
    summary: z.string().optional(),
    version: z.number().optional(),
  }),
]);

export const imageSchema = z.string();

export const opaqueSchema = z.string();

export const setIdSchema = z.string();

export const setEntrySchema = z.union([
  z.string(),
  z.object({
    name: z.string(),
  }),
]);

export const entrySchema = z.object({
  id: z.string(),
  type: z.string(),
  version: z.number(),
  by: refSchema,
  on: z.date(),
  action: entryActionSchema,
});

export const dataSchema = entrySchema.extend({
  status: stateSchema,
  updated: z.date().optional(),
  score: z.number().optional(),
});
